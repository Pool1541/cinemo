{"version":3,"file":"static/js/38.aa748777.chunk.js","mappings":"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","sources":["webpack://movies-app/./src/styles/components/rating.module.css?b6fa","utilities/setRating.js","components/Rating.jsx","hooks/useFetchMovieData.js","webpack://movies-app/./src/styles/components/movieinfo.module.css?f6a4","webpack://movies-app/./src/styles/components/actions.module.css?98b3","webpack://movies-app/./src/styles/components/addMovieToList.module.css?dbf2","webpack://movies-app/./src/styles/components/addMovieOption.module.css?a88e","components/AddMovieOption.jsx","webpack://movies-app/./src/styles/components/createListForm.module.css?cbb7","components/CreateListForm.jsx","components/AddMovieToList.jsx","components/Actions.jsx","components/MovieInfo.jsx","pages/MovieView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"rating_container__CS7GM\"};","export function setRating(num) {\r\n  const fill50 = { '--fill': '50%' };\r\n  const fill100 = { '--fill': '100%' };\r\n  const stars = new Array(5).fill(null);\r\n  const rating = num / 2;\r\n  const result = stars.map((_, index) => {\r\n    if (index < rating) {\r\n      if (index + 1 > rating) {\r\n        return <div key={index} style={fill50}></div>;\r\n      }\r\n      return <div key={index} style={fill100}></div>;\r\n    }\r\n    return <div key={index}></div>;\r\n  });\r\n\r\n  return result;\r\n}\r\n","import styles from 'styles/components/rating.module.css';\r\nimport { setRating } from 'utilities/setRating';\r\n\r\nexport default function Rating({ votes }) {\r\n  return <div className={styles.container}>{setRating(votes)}</div>;\r\n}\r\n","import { useQuery } from 'react-query';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getMovies } from 'services/tmdbAPI';\r\n\r\nexport default function useFecthMovieData() {\r\n  const { movieId } = useParams();\r\n  const {\r\n    data: movieData,\r\n    isError,\r\n    error,\r\n    isLoading,\r\n    isSuccess,\r\n  } = useQuery({\r\n    queryKey: ['movie', movieId],\r\n    queryFn: () => getMovies(movieId),\r\n  });\r\n\r\n  return {\r\n    movieData,\r\n    isError,\r\n    error,\r\n    isLoading,\r\n    isSuccess,\r\n  };\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"movieinfo_container__tsTJ3\",\"infoContainer\":\"movieinfo_infoContainer__kopl0\",\"info\":\"movieinfo_info__QVrDj\",\"absoluteInfo\":\"movieinfo_absoluteInfo__is19i\",\"title\":\"movieinfo_title__WblJZ\",\"meta\":\"movieinfo_meta__3ruEs\",\"overview\":\"movieinfo_overview__va1tj\",\"backgroundImage\":\"movieinfo_backgroundImage__8HEzf\",\"storylineCotnainer\":\"movieinfo_storylineCotnainer__bMmbH\",\"poster\":\"movieinfo_poster__9Vka3\",\"sinopsis\":\"movieinfo_sinopsis__KeW5m\",\"storylineInfo\":\"movieinfo_storylineInfo__ZXFk+\",\"storylineList\":\"movieinfo_storylineList__-NzmY\",\"storylineTitle\":\"movieinfo_storylineTitle__gCY7v\",\"storylineItem\":\"movieinfo_storylineItem__+9Q6B\",\"genres\":\"movieinfo_genres__UFnFG\"};","// extracted by mini-css-extract-plugin\nexport default {\"actionsContainer\":\"actions_actionsContainer__uyMu3\",\"actionsItem\":\"actions_actionsItem__g1fOC\"};","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"addMovieToList_background__pNhdq\",\"container\":\"addMovieToList_container__3-Z5J\",\"top\":\"addMovieToList_top__KTM8V\",\"form\":\"addMovieToList_form__ufJuR\",\"addList\":\"addMovieToList_addList__YjCDP\"};","// extracted by mini-css-extract-plugin\nexport default {\"formOption\":\"addMovieOption_formOption__7GcKt\",\"checkbox\":\"addMovieOption_checkbox__joxaH\",\"label\":\"addMovieOption_label__v+Via\"};","import useAuth from 'hooks/useAuth';\r\nimport { useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { changeList } from 'services/firebase';\r\nimport styles from 'styles/components/addMovieOption.module.css';\r\n\r\nexport default function AddMovieOption({ list, allLists }) {\r\n  const { auth } = useAuth();\r\n  const { movieId } = useParams();\r\n  const ref = useRef();\r\n\r\n  function checked() {\r\n    list.movies.forEach(movie => {\r\n      if (movie.movieID === parseInt(movieId)) {\r\n        ref.current.checked = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  function toggle() {\r\n    if (ref.current.checked) addMovie();\r\n    else removeMovie();\r\n  }\r\n\r\n  async function addMovie() {\r\n    const temp = allLists.lists.find(item => item.listID === list.listID);\r\n    const newMovieData = {\r\n      movieID: parseInt(movieId),\r\n      rating: 0,\r\n      review: '',\r\n      status: false,\r\n    };\r\n    temp.movies.push(newMovieData);\r\n    await changeList(auth.uid, allLists.lists);\r\n    console.log('Se ha agregado: ', movieId);\r\n  }\r\n\r\n  async function removeMovie() {\r\n    const temp = allLists.lists.find(item => item.listID === list.listID);\r\n    temp.movies = temp.movies.filter(\r\n      movie => movie.movieID !== parseInt(movieId)\r\n    );\r\n    await changeList(auth.uid, allLists.lists);\r\n    console.log('Se ha removido: ', movieId);\r\n  }\r\n\r\n  useEffect(() => {\r\n    checked();\r\n  }, [list]);\r\n\r\n  return (\r\n    <div className={styles.formOption}>\r\n      <input\r\n        type={'checkbox'}\r\n        id={list.listID}\r\n        className={styles.checkbox}\r\n        ref={ref}\r\n        onChange={toggle}\r\n      />\r\n      <label htmlFor={list.listID} title={list.title} className={styles.label}>\r\n        {list.title}\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"newListForm\":\"createListForm_newListForm__Rk0o5\",\"show\":\"createListForm_show__HbLwT\",\"newListName\":\"createListForm_newListName__A2m9G\",\"newListPrivacity\":\"createListForm_newListPrivacity__sPvLg\",\"newListCreate\":\"createListForm_newListCreate__QqOv-\"};","import { uuidv4 } from '@firebase/util';\r\nimport useAuth from 'hooks/useAuth';\r\nimport useFecthMovieData from 'hooks/useFetchMovieData';\r\nimport { addList } from 'services/firebase';\r\nimport styles from 'styles/components/createListForm.module.css';\r\n\r\nexport default function CreateListForm({ handleClose }) {\r\n  const { auth } = useAuth();\r\n  const { movieData } = useFecthMovieData();\r\n\r\n  async function createNewList(e) {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const data = Object.fromEntries(formData);\r\n    data.public = data.public === 'public';\r\n    const tempMovieData = {\r\n      movieID: movieData.id,\r\n      rating: 0,\r\n      review: '',\r\n      status: false,\r\n    };\r\n    const newList = {\r\n      ...data,\r\n      creationTime: Date.now(),\r\n      movies: [tempMovieData],\r\n      listID: uuidv4(),\r\n      background: `https://image.tmdb.org/t/p/w780${movieData.backdrop_path}`,\r\n    };\r\n\r\n    try {\r\n      await addList(auth.uid, newList);\r\n      handleClose();\r\n      console.log('Lista agregada con éxito');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className={styles.newListForm} onSubmit={createNewList}>\r\n      <div className={styles.newListName}>\r\n        <label htmlFor='listName'>Nombre</label>\r\n        <input\r\n          type='text'\r\n          id='listName'\r\n          placeholder='Nombre de la lista'\r\n          name='title'\r\n        />\r\n      </div>\r\n      <div className={styles.newListPrivacity}>\r\n        <label htmlFor='privacity'>Privacidad</label>\r\n        <select id='privacity' name='public'>\r\n          <option value='public'>Pública</option>\r\n          <option value='private'>Privada</option>\r\n        </select>\r\n      </div>\r\n      <button type='submit' className={styles.newListCreate}>\r\n        Crear\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import useFecthMovieData from 'hooks/useFetchMovieData';\r\nimport useListsData from 'hooks/useListsData';\r\nimport { useState } from 'react';\r\nimport { AiOutlinePlus } from 'react-icons/ai';\r\nimport { IoMdClose } from 'react-icons/io';\r\nimport styles from 'styles/components/addMovieToList.module.css';\r\nimport AddMovieOption from './AddMovieOption';\r\nimport CreateListForm from './CreateListForm';\r\n\r\nexport default function AddMovieToList({ handleClose }) {\r\n  const { listsData, isLoading } = useListsData();\r\n  const [newList, setNewList] = useState(false);\r\n\r\n  function handleClick() {\r\n    setNewList(!newList);\r\n  }\r\n\r\n  if (isLoading) return;\r\n\r\n  return (\r\n    <div className={styles.background}>\r\n      <div className={styles.container}>\r\n        <div className={styles.top}>\r\n          <h3>Agregar a ...</h3>\r\n          <button type='button' onClick={handleClose}>\r\n            <IoMdClose />\r\n          </button>\r\n        </div>\r\n        <form className={styles.form}>\r\n          {listsData.lists.map(list => (\r\n            <AddMovieOption\r\n              key={list.listID}\r\n              allLists={listsData}\r\n              list={list}\r\n            />\r\n          ))}\r\n        </form>\r\n        {newList ? (\r\n          <CreateListForm handleClose={handleClose} />\r\n        ) : (\r\n          <button\r\n            type='button'\r\n            className={styles.addList}\r\n            onClick={handleClick}\r\n          >\r\n            Nueva lista <AiOutlinePlus />\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { RiPlayListAddFill } from 'react-icons/ri';\r\nimport { AiOutlineHeart, AiOutlineStar } from 'react-icons/ai';\r\nimport styles from 'styles/components/actions.module.css';\r\nimport { addList } from 'services/firebase';\r\nimport useAuth from 'hooks/useAuth';\r\nimport { uuidv4 } from '@firebase/util';\r\nimport useFecthMovieData from 'hooks/useFetchMovieData';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport AddMovieToList from './AddMovieToList';\r\n\r\nexport default function Actions() {\r\n  const { auth } = useAuth();\r\n  const { movieData } = useFecthMovieData();\r\n  const [modalIsOpen, setModalIsOpen] = useState();\r\n  const navigate = useNavigate();\r\n\r\n  function LauncherModal() {\r\n    if (!auth) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    setModalIsOpen(!modalIsOpen);\r\n  }\r\n\r\n  // async function handleClick() {\r\n  //   if (!auth) {\r\n  //     navigate('/login');\r\n  //     return;\r\n  //   }\r\n\r\n  //   const movie = {\r\n  //     creationTime: Date.now(),\r\n  //     listID: uuidv4(),\r\n  //     public: true,\r\n  //     title: 'Primera lista',\r\n  //     background: `https://image.tmdb.org/t/p/w780${movieData.backdrop_path}`,\r\n  //     movies: [\r\n  //       {\r\n  //         movieID: movieData.id,\r\n  //         rating: null,\r\n  //         review: '',\r\n  //         status: false,\r\n  //       },\r\n  //     ],\r\n  //   };\r\n  //   await addList(auth.uid, movie);\r\n  // }\r\n\r\n  return (\r\n    <ul className={styles.actionsContainer}>\r\n      <li>\r\n        <button\r\n          className={styles.actionsItem}\r\n          action={'Agregar a lista'}\r\n          onClick={LauncherModal}\r\n        >\r\n          <RiPlayListAddFill />\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <button className={styles.actionsItem} action={'Favorito'}>\r\n          <AiOutlineHeart />\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <button className={styles.actionsItem} action={'Valorar'}>\r\n          <AiOutlineStar />\r\n        </button>\r\n      </li>\r\n      {modalIsOpen ? <AddMovieToList handleClose={LauncherModal} /> : null}\r\n    </ul>\r\n  );\r\n}\r\n","import useFecthMovieData from 'hooks/useFetchMovieData';\r\nimport styles from '../styles/components/movieinfo.module.css';\r\nimport Actions from './Actions';\r\nimport Rating from './Rating';\r\n\r\nexport const MovieInfo = () => {\r\n  const { movieData: movie, isLoading } = useFecthMovieData();\r\n\r\n  // runtime en hora y min / revenue\r\n  const duration = movie?.runtime;\r\n  let hours = Math.floor(duration / 60);\r\n  let min = Math.round(duration % 60);\r\n\r\n  if (min >= 60) {\r\n    hours += 1;\r\n    min -= 60;\r\n  }\r\n\r\n  function toCurrency(amount) {\r\n    const revenue = amount;\r\n    const dollars = revenue.toLocaleString('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n    });\r\n\r\n    return dollars;\r\n  }\r\n\r\n  if (movie)\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.infoContainer}>\r\n          <div className={styles.info}>\r\n            <div className={styles.absoluteInfo}>\r\n              <h2 className={styles.title}>{movie.title}</h2>\r\n              <div className={styles.meta}>\r\n                <span>{<Rating votes={movie.vote_average} />}</span>\r\n                <span>{`${movie.vote_count} Reviews`}</span>\r\n                <span>{movie.release_date}</span>\r\n                <span>{`${hours}h:${min}min`}</span>\r\n              </div>\r\n              <div className={styles.overview}>\r\n                <p>{movie.overview}</p>\r\n              </div>\r\n              <Actions />\r\n            </div>\r\n          </div>\r\n          <div className={styles.backgroundImage}>\r\n            <picture>\r\n              <source\r\n                srcSet={`https://image.tmdb.org/t/p/w300${movie.backdrop_path}`}\r\n                media='(max-width: 320px)'\r\n              />\r\n              <source\r\n                srcSet={`https://image.tmdb.org/t/p/w780${movie.backdrop_path}`}\r\n                media='(max-width: 780px)'\r\n              />\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w1280${movie.backdrop_path}`}\r\n              />\r\n            </picture>\r\n          </div>\r\n        </div>\r\n        <div className={styles.storylineCotnainer}>\r\n          <div className={styles.poster}>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w342${movie.poster_path}`}\r\n              alt={`Poster de ${movie.title}`}\r\n            />\r\n          </div>\r\n          <div className={styles.storylineInfo}>\r\n            <h3>Storyline</h3>\r\n            <p className={styles.sinopsis}>{movie.overview}</p>\r\n            <div>\r\n              <ul className={styles.storylineList}>\r\n                <li className={styles.storylineItem}>\r\n                  <div className={styles.storylineTitle}>Released</div>\r\n                  <div>{movie.release_date}</div>\r\n                </li>\r\n                <li className={styles.storylineItem}>\r\n                  <div className={styles.storylineTitle}>Revenue</div>\r\n                  <div>{toCurrency(movie.revenue)}</div>\r\n                </li>\r\n                <li className={styles.storylineItem}>\r\n                  <div className={styles.storylineTitle}>Status</div>\r\n                  <div>{movie.status}</div>\r\n                </li>\r\n                <li className={styles.storylineItem}>\r\n                  <div className={styles.storylineTitle}>Production</div>\r\n                  <div>{movie.production_companies[0]?.name}</div>\r\n                </li>\r\n                <li className={styles.storylineItem}>\r\n                  <div className={styles.storylineTitle}>Runtime</div>\r\n                  <div>\r\n                    {hours}h {min}min\r\n                  </div>\r\n                </li>\r\n                <li className={styles.storylineItem}>\r\n                  <div className={styles.storylineTitle}>Budget</div>\r\n                  <div>{toCurrency(movie.budget)}</div>\r\n                </li>\r\n                <li className={styles.storylineItem}>\r\n                  <div className={styles.storylineTitle}>Genres</div>\r\n                  <div className={styles.genres}>\r\n                    {movie.genres.map(genre => (\r\n                      <div key={genre.id}>{genre.name}</div>\r\n                    ))}\r\n                  </div>\r\n                </li>\r\n                <li className={styles.storylineItem}>\r\n                  <div className={styles.storylineTitle}>Language</div>\r\n                  <div>{movie.spoken_languages[0]?.name}</div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n","import { MovieInfo } from 'components/MovieInfo';\r\n\r\nexport default function MovieView() {\r\n  return <MovieInfo />;\r\n}\r\n"],"names":["setRating","num","fill50","fill100","stars","Array","fill","rating","map","_","index","style","Rating","votes","className","styles","useFecthMovieData","movieId","useParams","useQuery","queryKey","queryFn","getMovies","movieData","data","isError","error","isLoading","isSuccess","AddMovieOption","list","allLists","auth","useAuth","ref","useRef","temp","lists","find","item","listID","newMovieData","movieID","parseInt","review","status","movies","push","changeList","uid","console","log","filter","movie","useEffect","forEach","current","checked","type","id","onChange","addMovie","removeMovie","htmlFor","title","CreateListForm","handleClose","e","preventDefault","formData","FormData","target","Object","fromEntries","public","tempMovieData","newList","creationTime","Date","now","uuidv4","background","backdrop_path","addList","onSubmit","placeholder","name","value","AddMovieToList","useListsData","listsData","useState","setNewList","onClick","Actions","modalIsOpen","setModalIsOpen","navigate","useNavigate","LauncherModal","action","MovieInfo","duration","runtime","hours","Math","floor","min","round","toCurrency","amount","toLocaleString","currency","vote_average","vote_count","release_date","overview","srcSet","media","src","poster_path","alt","revenue","production_companies","budget","genres","genre","spoken_languages","MovieView"],"sourceRoot":""}