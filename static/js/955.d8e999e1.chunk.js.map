{"version":3,"file":"static/js/955.d8e999e1.chunk.js","mappings":"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","sources":["webpack://cinemo/./src/styles/layout/aside.module.css?5405","layout/Aside.jsx","webpack://cinemo/./src/styles/layout/mainContainer.module.css?73c1","layout/MainContainer.jsx","webpack://cinemo/./src/styles/components/gridContainer.module.css?034e","webpack://cinemo/./src/styles/components/skeletonCard.module.css?cf0b","components/SkeletonCard.jsx","webpack://cinemo/./src/styles/components/button.module.css?4fd1","components/Button.jsx","components/GridContainer.jsx","webpack://cinemo/./src/styles/components/categories.module.css?67fa","components/CategoriesList.jsx","components/Categories.jsx","webpack://cinemo/./src/styles/components/navbar.module.css?2d2c","components/Navbar.jsx","pages/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"show\":\"aside_show__Tig9N\"};","import { DataContext } from 'contexts/dataContext';\r\nimport { useContext } from 'react';\r\nimport styles from 'styles/layout/aside.module.css';\r\n\r\nexport default function Aside({ children }) {\r\n  const { modal } = useContext(DataContext);\r\n\r\n  return <aside className={modal ? styles.show : undefined}>{children}</aside>;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"mainContainer_mainContainer__auksf\"};","import styles from 'styles/layout/mainContainer.module.css';\r\n\r\nexport default function MainContainer({ children }) {\r\n  return <div className={styles.mainContainer}>{children}</div>;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"gridContainer\":\"gridContainer_gridContainer__VRuJ0\",\"btnContainer\":\"gridContainer_btnContainer__UJ84G\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"skeletonCard_container__bT6Fs\",\"image\":\"skeletonCard_image__Iwk+M\",\"skeleton\":\"skeletonCard_skeleton__KLXTY\",\"info\":\"skeletonCard_info__Bvrw9\"};","import styles from 'styles/components/skeletonCard.module.css';\r\nimport Rating from './Rating';\r\n\r\nexport default function SkeletonCard() {\r\n  return (\r\n    <a className={styles.container}>\r\n      <div className={styles.image}></div>\r\n      <div className={styles.info}>\r\n        <h2></h2>\r\n        <div className={styles.rating}>\r\n          <Rating votes={0} />\r\n        </div>\r\n      </div>\r\n    </a>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btnNext\":\"button_btnNext__YcwrJ\"};","import styles from 'styles/components/button.module.css';\r\n\r\nexport default function Button({\r\n  handleClick,\r\n  currentPage,\r\n  children,\r\n  maxPages,\r\n  prev,\r\n  next,\r\n}) {\r\n  if (prev && currentPage <= 1) return <div></div>;\r\n  if (next && currentPage === maxPages) return <div></div>;\r\n  return (\r\n    <button onClick={handleClick} className={styles.btnNext}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n","import styles from 'styles/components/gridContainer.module.css';\r\nimport Card from './Card';\r\nimport { useQuery } from 'react-query';\r\nimport { getPopular, getSelectedList } from 'services/tmdbAPI';\r\nimport SkeletonCard from './SkeletonCard';\r\nimport { useContext } from 'react';\r\nimport { DataContext } from 'contexts/dataContext';\r\nimport Button from './Button';\r\nimport ResultsNotFound from 'components/ResultsNotFound';\r\n\r\nexport default function GridContainer() {\r\n  const { peliculas, isSuccess, setQueryValues } = useContext(DataContext);\r\n\r\n  const handleNext = () => {\r\n    setQueryValues({\r\n      fn: () => getSelectedList({ url: peliculas.next_page }),\r\n      key: ['selected', peliculas.next_page],\r\n    });\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    setQueryValues({\r\n      fn: () => getSelectedList({ url: peliculas.previous_page }),\r\n      key: ['selected', peliculas.previous_page],\r\n    });\r\n  };\r\n\r\n  const skeletonCards = () => {\r\n    const cards = new Array(20).fill(null);\r\n    return cards.map((_, index) => <SkeletonCard key={index} />);\r\n  };\r\n\r\n  const succesCards = () => {\r\n    return peliculas?.results?.map(movie => (\r\n      <Card movie={movie} key={movie.id} />\r\n    ));\r\n  };\r\n\r\n  if (peliculas?.results?.length === 0) {\r\n    return <ResultsNotFound />;\r\n  }\r\n  return (\r\n    <>\r\n      <div className={styles.gridContainer}>\r\n        {isSuccess ? succesCards() : skeletonCards()}\r\n      </div>\r\n      <div className={styles.btnContainer}>\r\n        <Button\r\n          handleClick={handlePrev}\r\n          currentPage={peliculas.page}\r\n          prev={true}\r\n        >\r\n          Página {peliculas.page - 1}\r\n        </Button>\r\n        <Button\r\n          handleClick={handleNext}\r\n          currentPage={peliculas.page}\r\n          maxPages={peliculas.total_pages}\r\n          next={true}\r\n        >\r\n          Página {peliculas.page + 1}\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"categories_background__uze98\",\"categories\":\"categories_categories__S9EWV\",\"item\":\"categories_item__yAXYY\",\"listButton\":\"categories_listButton__DGPPL\",\"listItem\":\"categories_listItem__Xhr4G\",\"list\":\"categories_list__j2wvJ\",\"flexalign\":\"categories_flexalign__wXPn0\",\"iconalign\":\"categories_iconalign__53NeW\",\"activeLink\":\"categories_activeLink__OqzB7\"};","import { useQuery } from 'react-query';\r\nimport { getGenres } from '../services/tmdbAPI';\r\nimport styles from '../styles/components/categories.module.css';\r\nimport { FaRegDotCircle } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction CategoriesList({ handleClick, selectionID }) {\r\n  //  solicitando data para crear Lista de generos\r\n  const { data, isSuccess } = useQuery({\r\n    queryKey: ['genres'],\r\n    queryFn: getGenres,\r\n  });\r\n\r\n  if (isSuccess) {\r\n    const categories = data.genres;\r\n\r\n    return (\r\n      <>\r\n        {categories.map(cat => (\r\n          <li className={styles.item} key={cat.id}>\r\n            <button\r\n              id={cat.id}\r\n              onClick={() => handleClick(cat.id)}\r\n              className={styles.listButton}\r\n            >\r\n              <Link\r\n                to={'/'}\r\n                className={`${styles.listItem} ${\r\n                  cat.id === selectionID ? styles.activeLink : ''\r\n                }`}\r\n              >\r\n                <FaRegDotCircle className={styles.iconalign} /> {cat.name}\r\n              </Link>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoriesList;\r\n","import { useState, useContext, useEffect } from 'react';\r\nimport { getPopular, getTopRated, getSelectedList } from '../services/tmdbAPI';\r\nimport styles from '../styles/components/categories.module.css';\r\nimport { BsFillHeartFill, BsFillFileBarGraphFill } from 'react-icons/bs';\r\nimport CategoriesList from './CategoriesList';\r\nimport { DataContext } from '../contexts/dataContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Categories() {\r\n  const [selectionId, setSelectionId] = useState('popular');\r\n\r\n  const { setQueryValues, modal, setModal, setMovie } = useContext(DataContext);\r\n\r\n  useEffect(() => {\r\n    function closeAside(e) {\r\n      const sideBar = document.querySelector(`.${styles.background}`);\r\n      const burgerIcon = document.getElementById('burgerIcon');\r\n      if (\r\n        modal &&\r\n        innerWidth <= 1000 &&\r\n        !sideBar.contains(e.target) &&\r\n        !burgerIcon.contains(e.target)\r\n      ) {\r\n        setModal(!modal);\r\n      }\r\n    }\r\n\r\n    document.addEventListener('click', closeAside);\r\n\r\n    return () => document.removeEventListener('click', closeAside);\r\n  }, [modal]);\r\n\r\n  function handleClick(id) {\r\n    setSelectionId(id);\r\n    if (id === 'popular') setQueryValues({ fn: getPopular, key: ['popular'] });\r\n    else if (id === 'toprated')\r\n      setQueryValues({ fn: getTopRated, key: ['toprated'] });\r\n    else\r\n      setQueryValues({\r\n        fn: () => getSelectedList({ id }),\r\n        key: ['selected', id],\r\n      });\r\n    setMovie('');\r\n  }\r\n\r\n  return (\r\n    <div className={styles.background}>\r\n      <div className={styles.categories}>\r\n        <h4 className={styles.h4}>Discover</h4>\r\n        <div className={styles.list}>\r\n          <button\r\n            onClick={() => handleClick('popular')}\r\n            className={styles.listButton}\r\n          >\r\n            <Link\r\n              to={'/'}\r\n              className={`${styles.listItem} ${\r\n                selectionId === 'popular' ? styles.activeLink : ''\r\n              }`}\r\n            >\r\n              <BsFillHeartFill className={styles.iconalign} /> Populares{' '}\r\n            </Link>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => handleClick('toprated')}\r\n            className={styles.listButton}\r\n          >\r\n            <Link\r\n              to={'/'}\r\n              className={`${styles.listItem} ${\r\n                selectionId === 'toprated' ? styles.activeLink : ''\r\n              }`}\r\n            >\r\n              <BsFillFileBarGraphFill className={styles.iconalign} /> Top Rated\r\n            </Link>\r\n          </button>\r\n        </div>\r\n        <h4 className={styles.h4}>Generos</h4>\r\n        <ul className={styles.list}>\r\n          <CategoriesList\r\n            handleClick={handleClick}\r\n            selectionID={selectionId}\r\n            selectionIDFn={setSelectionId}\r\n          />\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Categories;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"navbar\":\"navbar_navbar__315wb\",\"logo\":\"navbar_logo__taF53\",\"navButton\":\"navbar_navButton__8RR15\",\"linea1\":\"navbar_linea1__JCgA9\",\"linea2\":\"navbar_linea2__59hAn\",\"linea3\":\"navbar_linea3__S7aMo\",\"toggle\":\"navbar_toggle__fR4+i\",\"searchBar\":\"navbar_searchBar__JDuej\",\"search\":\"navbar_search__c7+b8\",\"btnSearch\":\"navbar_btnSearch__7galf\",\"loginContainer\":\"navbar_loginContainer__MITgR\",\"loginBtn\":\"navbar_loginBtn__5vlUy\"};","import styles from '../styles/components/navbar.module.css';\r\nimport { useContext, useState } from 'react';\r\nimport { DataContext } from '../contexts/dataContext';\r\nimport { BiSearch } from 'react-icons/bi';\r\nimport { getSearchResults } from '../services/tmdbAPI';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport UserProfile from './UserProfile';\r\nimport useUserData from 'hooks/useUserData';\r\nimport SpinnerForImg from './SpinnerForImg';\r\nimport CinemoLogo from 'assets/CinemoLogo';\r\n\r\nfunction NavbarButton() {\r\n  const { modal, setModal, setQueryValues, setMovie } = useContext(DataContext);\r\n  const { userData, isLoading } = useUserData();\r\n  const [text, setText] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  function handleClick(e) {\r\n    setModal(!modal);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!text || text.startsWith(' ')) {\r\n      return setText('');\r\n    }\r\n\r\n    setQueryValues({\r\n      fn: () => getSearchResults(text.replace(/ /g, '+')),\r\n      key: ['searchResults', text],\r\n    });\r\n    navigate('/');\r\n    setText('');\r\n    setMovie('');\r\n  }\r\n\r\n  return (\r\n    <div className={styles.navbar}>\r\n      <button\r\n        onClick={handleClick}\r\n        className={`${styles.navButton} ${modal ? styles.toggle : null}`}\r\n        title='Mostrar categorias'\r\n        id='burgerIcon'\r\n      >\r\n        <div className={styles.linea1}></div>\r\n        <div className={styles.linea2}></div>\r\n        <div className={styles.linea3}></div>\r\n      </button>\r\n      <Link to='/' className={styles.logo}>\r\n        <CinemoLogo />\r\n      </Link>\r\n      <form onSubmit={handleSubmit} className={styles.searchBar}>\r\n        <input\r\n          onChange={e => setText(e.target.value)}\r\n          value={text}\r\n          type='text'\r\n          className={styles.search}\r\n          placeholder='Buscar'\r\n        />\r\n        <button type='submit' className={styles.btnSearch} title='buscar'>\r\n          <BiSearch />\r\n        </button>\r\n      </form>\r\n      <div className={styles.loginContainer}>\r\n        {isLoading ? (\r\n          <SpinnerForImg />\r\n        ) : userData ? (\r\n          <UserProfile user={userData} />\r\n        ) : (\r\n          <Link className={styles.loginBtn} to='/login'>\r\n            Iniciar sesión\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavbarButton;\r\n","import Aside from 'layout/Aside';\r\nimport Footer from 'layout/Footer';\r\nimport MainContainer from 'layout/MainContainer';\r\nimport Header from 'layout/Header';\r\nimport Main from 'layout/Main';\r\nimport GridContainer from 'components/GridContainer';\r\nimport Categories from 'components/Categories';\r\nimport Navbar from 'components/Navbar';\r\nimport { AboutPage } from 'components/AboutPage';\r\nimport { Outlet, useParams } from 'react-router-dom';\r\n\r\nexport default function Home() {\r\n  const { movieId, personId } = useParams();\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <Navbar />\r\n      </Header>\r\n      <Main>\r\n        <Aside>\r\n          <Categories />\r\n        </Aside>\r\n        <MainContainer>\r\n          {movieId || personId ? <Outlet /> : <GridContainer />}\r\n        </MainContainer>\r\n      </Main>\r\n      <Footer>\r\n        <AboutPage />\r\n      </Footer>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Aside","children","modal","useContext","DataContext","className","styles","undefined","MainContainer","SkeletonCard","Rating","votes","Button","handleClick","currentPage","maxPages","prev","next","onClick","GridContainer","peliculas","isSuccess","setQueryValues","results","length","ResultsNotFound","map","movie","Card","id","succesCards","Array","fill","_","index","fn","getSelectedList","url","previous_page","key","page","next_page","total_pages","selectionID","useQuery","queryKey","queryFn","getGenres","data","categories","genres","cat","to","name","useState","selectionId","setSelectionId","setModal","setMovie","getPopular","getTopRated","useEffect","closeAside","e","sideBar","document","querySelector","burgerIcon","getElementById","innerWidth","contains","target","addEventListener","removeEventListener","selectionIDFn","useUserData","userData","isLoading","text","setText","navigate","useNavigate","title","CinemoLogo","onSubmit","preventDefault","startsWith","getSearchResults","replace","onChange","value","type","placeholder","SpinnerForImg","UserProfile","user","Home","useParams","movieId","personId","Header","Navbar","Main","Footer","AboutPage"],"sourceRoot":""}