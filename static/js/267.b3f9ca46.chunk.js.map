{"version":3,"file":"static/js/267.b3f9ca46.chunk.js","mappings":"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","sources":["webpack://movies-app/./src/styles/components/loginForm.module.css?2d1b","webpack://movies-app/./src/styles/components/registerModal.module.css?3769","components/RegisterModal.jsx","components/LoginForm.jsx","webpack://movies-app/./src/styles/pages/login.module.css?b7a6","pages/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"background\":\"loginForm_background__0i19F\",\"loginContainer\":\"loginForm_loginContainer__H7VaS\",\"formBox\":\"loginForm_formBox__mMC7g\",\"title\":\"loginForm_title__3P78Z\",\"inputs\":\"loginForm_inputs__d5xUv\",\"registered\":\"loginForm_registered__HhLJw\",\"buttons\":\"loginForm_buttons__94qAy\",\"imageBox\":\"loginForm_imageBox__xkuH4\",\"error\":\"loginForm_error__Y7YSD\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"registerModal_container__uawMk\",\"form\":\"registerModal_form__n9+8I\",\"closeBtn\":\"registerModal_closeBtn__d0j6O\",\"error\":\"registerModal_error__nkU2R\"};","import styles from 'styles/components/registerModal.module.css';\r\nimport { IoMdClose } from 'react-icons/io';\r\nimport { useRef } from 'react';\r\nimport useAuth from 'hooks/useAuth';\r\n\r\nexport default function RegisterModal({ handleClose }) {\r\n  const errorMessage = useRef();\r\n  const { registerError: error, onRegister } = useAuth();\r\n\r\n  if (error && errorMessage.current)\r\n    errorMessage.current.innerText = error.replaceAll('-', ' ');\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <form\r\n        className={styles.form}\r\n        onSubmit={e => onRegister(e).then(res => res && handleClose())}\r\n      >\r\n        <h2>Registrate</h2>\r\n        <label htmlFor='name'>Nombre</label>\r\n        <input type='text' id='name' name='name' />\r\n        <label htmlFor='lastName'>Apellido</label>\r\n        <input type='text' id='lastName' name='lastName' />\r\n        <label htmlFor='registerEmail'>Correo electrónico</label>\r\n        <input type='email' id='registerEmail' name='email' />\r\n        <label htmlFor='registerPassword'>Contraseña</label>\r\n        <input type='password' id='registerPassword' name='password' />\r\n        <div className={styles.error} ref={errorMessage} />\r\n        <button type='submit'>Registrarme</button>\r\n        <button type='button' className={styles.closeBtn} onClick={handleClose}>\r\n          <IoMdClose />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import useAuth from 'hooks/useAuth';\r\nimport { useRef, useState } from 'react';\r\nimport styles from 'styles/components/loginForm.module.css';\r\nimport RegisterModal from './RegisterModal';\r\n\r\nexport default function LoginForm() {\r\n  const { onLogin, onLoginWithGoogle, loginError: error } = useAuth();\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const errorMessage = useRef(null);\r\n\r\n  if (error && modalIsOpen === false)\r\n    errorMessage.current.innerText = error.replaceAll('-', ' ');\r\n  // async function handleSubmit(e) {\r\n  //   e.preventDefault();\r\n  //   const formData = new FormData(e.target);\r\n  //   const data = Object.fromEntries(formData);\r\n  //   if (data.email && data.password)\r\n  //     try {\r\n  //       const userCredential = await loginUser({\r\n  //         email: data.email,\r\n  //         password: data.password,\r\n  //       });\r\n  //     } catch (error) {\r\n  //       errorMessage.current.innerText = error.code.split('/')[1];\r\n  //     }\r\n  //   else errorMessage.current.innerText = 'Completa todos los campos';\r\n  // }\r\n\r\n  function handleRegisterModal() {\r\n    setModalIsOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setModalIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.loginContainer}>\r\n        <form className={styles.formBox} onSubmit={onLogin}>\r\n          <div className={styles.title}>\r\n            <h1>Iniciar sesión</h1>\r\n          </div>\r\n          <div className={styles.inputs}>\r\n            <label htmlFor='loginEmail'>Correo electrónico</label>\r\n            <input type='text' id='loginEmail' name='email' />\r\n            <label htmlFor='loginPassword'>Contraseña</label>\r\n            <input type='password' id='loginPassword' name='password' />\r\n          </div>\r\n          <div className={styles.error} ref={errorMessage}></div>\r\n          <div className={styles.registered}>\r\n            <p>\r\n              ¿Aún no tienes una cuenta?{' '}\r\n              <button type='button' onClick={handleRegisterModal}>\r\n                Registrate\r\n              </button>\r\n            </p>\r\n          </div>\r\n          <div className={styles.buttons}>\r\n            <button type='submit'>Iniciar sesion</button>\r\n            <button type='button' onClick={onLoginWithGoogle}>\r\n              Ingresar con Google\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div className={styles.imageBox}>\r\n          <img src={require('assets/banner2.webp')} alt='movies banner' />\r\n        </div>\r\n      </div>\r\n      {modalIsOpen ? (\r\n        <div id={styles.background}>\r\n          <RegisterModal id={styles.background} handleClose={handleClose} />\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btnHome\":\"login_btnHome__H3kft\",\"link\":\"login_link__+TlSN\",\"login\":\"login_login__qDDGC\"};","import LoginForm from 'components/LoginForm';\r\nimport useAuth from 'hooks/useAuth';\r\nimport Header from 'layout/Header';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport styles from 'styles/pages/login.module.css';\r\n\r\nexport default function Login() {\r\n  const { auth } = useAuth();\r\n\r\n  if (auth) {\r\n    return <Navigate to='/' replace />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <div className={styles.btnHome}>\r\n          <Link to={'/'} className={styles.link}>\r\n            Inicio\r\n          </Link>\r\n        </div>\r\n      </Header>\r\n      <div className={`${styles.login} login`}>\r\n        <LoginForm />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["RegisterModal","handleClose","errorMessage","useRef","useAuth","error","registerError","onRegister","current","innerText","replaceAll","className","styles","onSubmit","e","then","res","htmlFor","type","id","name","ref","onClick","LoginForm","onLogin","onLoginWithGoogle","loginError","useState","modalIsOpen","setModalIsOpen","src","require","alt","Login","auth","to","replace","Header"],"sourceRoot":""}