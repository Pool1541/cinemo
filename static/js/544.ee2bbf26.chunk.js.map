{"version":3,"file":"static/js/544.ee2bbf26.chunk.js","mappings":"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","sources":["components/AuthProvider.jsx","layout/Footer.jsx","layout/Header.jsx","webpack://movies-app/./src/styles/components/loginForm.module.css?2d1b","components/LoginForm.jsx","webpack://movies-app/./src/styles/pages/login.module.css?b7a6","pages/Login.jsx","services/firebase.js"],"sourcesContent":["import { onAuthStateChanged } from 'firebase/auth';\r\nimport { useEffect } from 'react';\r\nimport { auth, createUser, getUserData } from 'services/firebase';\r\n\r\nexport default function AuthProvider({\r\n  children,\r\n  onUserLoggedIn,\r\n  onUserNotLoggedIn,\r\n}) {\r\n  useEffect(() => {\r\n    // Verificamos si el usario está logeado o no para mostrar la visa correspondiente.\r\n    onAuthStateChanged(auth, async user => {\r\n      if (user) {\r\n        // Si el usuario está logeado, buscamos su información en la db para enviarsela al componente que la requiera.\r\n        const userInfo = await getUserData(user.uid);\r\n        if (userInfo) onUserLoggedIn(userInfo);\r\n        else {\r\n          const tempUserData = {\r\n            name: user.displayName,\r\n            creationTime: Date.now(),\r\n            lastName: '',\r\n            email: user.email,\r\n            uid: user.uid,\r\n            photoURL:\r\n              'https://upload.wikimedia.org/wikipedia/commons/2/2c/Default_pfp.svg',\r\n          };\r\n          createUser(tempUserData);\r\n          onUserLoggedIn(tempUserData);\r\n        }\r\n      } else {\r\n        onUserNotLoggedIn();\r\n      }\r\n    });\r\n  }, [onUserLoggedIn, onUserNotLoggedIn]);\r\n  return <div>{children}</div>;\r\n}\r\n","import styles from 'styles/layout/footer.module.css';\r\n\r\nexport default function Footer({ children }) {\r\n  return <footer>{children}</footer>;\r\n}\r\n","import styles from 'styles/layout/header.module.css';\r\n\r\nexport default function Header({ children }) {\r\n  return <header>{children}</header>;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"loginForm_background__0i19F\",\"loginContainer\":\"loginForm_loginContainer__H7VaS\",\"formBox\":\"loginForm_formBox__mMC7g\",\"title\":\"loginForm_title__3P78Z\",\"inputs\":\"loginForm_inputs__d5xUv\",\"registered\":\"loginForm_registered__HhLJw\",\"buttons\":\"loginForm_buttons__94qAy\",\"imageBox\":\"loginForm_imageBox__xkuH4\",\"error\":\"loginForm_error__Y7YSD\"};","import { signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\r\nimport { lazy, Suspense, useRef } from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { auth, loginUser } from 'services/firebase';\r\nimport styles from 'styles/components/loginForm.module.css';\r\nimport Spinner from './Spinner';\r\n\r\nexport default function LoginForm() {\r\n  const errorMessage = useRef();\r\n  const provider = new GoogleAuthProvider();\r\n\r\n  async function loginWithGoogle() {\r\n    try {\r\n      const user = await signInWithPopup(auth, provider);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const data = Object.fromEntries(formData);\r\n    if (data.email && data.password)\r\n      try {\r\n        const userCredential = await loginUser({\r\n          email: data.email,\r\n          password: data.password,\r\n        });\r\n      } catch (error) {\r\n        errorMessage.current.innerText = error.code.split('/')[1];\r\n      }\r\n    else errorMessage.current.innerText = 'Completa todos los campos';\r\n  }\r\n\r\n  function handleRegisterModal() {\r\n    const Modal = lazy(() => import('./RegisterModal'));\r\n    const background = document.createElement('div');\r\n    background.id = styles.background;\r\n    const root = createRoot(\r\n      document.querySelector('#root').appendChild(background)\r\n    );\r\n    root.render(\r\n      <Suspense fallback={<Spinner />}>\r\n        <Modal root={root} id={styles.background} />\r\n      </Suspense>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.loginContainer}>\r\n      <form className={styles.formBox} onSubmit={handleSubmit}>\r\n        <div className={styles.title}>\r\n          <h1>Iniciar sesión</h1>\r\n        </div>\r\n        <div className={styles.inputs}>\r\n          <label htmlFor='loginEmail'>Correo electrónico</label>\r\n          <input type='text' id='loginEmail' name='email' />\r\n          <label htmlFor='loginPassword'>Contraseña</label>\r\n          <input type='password' id='loginPassword' name='password' />\r\n        </div>\r\n        <div className={styles.error} ref={errorMessage}></div>\r\n        <div className={styles.registered}>\r\n          <p>\r\n            ¿Aún no tienes una cuenta?{' '}\r\n            <button onClick={handleRegisterModal}>Registrate</button>\r\n          </p>\r\n        </div>\r\n        <div className={styles.buttons}>\r\n          <button type='submit'>Iniciar sesion</button>\r\n          <button type='button' onClick={loginWithGoogle}>\r\n            Ingresar con Google\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <div className={styles.imageBox}>\r\n        <img src={require('assets/banner2.webp')} alt='movies banner' />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btnHome\":\"login_btnHome__H3kft\",\"link\":\"login_link__+TlSN\",\"login\":\"login_login__qDDGC\"};","import AuthProvider from 'components/AuthProvider';\r\nimport LoginForm from 'components/LoginForm';\r\nimport Footer from 'layout/Footer';\r\nimport Header from 'layout/Header';\r\nimport { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport styles from 'styles/pages/login.module.css';\r\n\r\nexport default function Login() {\r\n  const [state, setState] = useState(0);\r\n\r\n  // 0 : inizializando.\r\n  // 1 : cargando\r\n  // 2 : login completo\r\n  // 3 : sin usuario logeado\r\n\r\n  const navigate = useNavigate();\r\n\r\n  function handleUserLoggedIn() {\r\n    navigate('/');\r\n  }\r\n\r\n  function handleUserNotLoggedIn() {\r\n    setState(2);\r\n  }\r\n\r\n  if (state === 0)\r\n    return (\r\n      <AuthProvider\r\n        onUserLoggedIn={handleUserLoggedIn}\r\n        onUserNotLoggedIn={handleUserNotLoggedIn}\r\n      ></AuthProvider>\r\n    );\r\n\r\n  if (state === 2)\r\n    return (\r\n      <>\r\n        <Header>\r\n          <div className={styles.btnHome}>\r\n            <Link to={'/'} className={styles.link}>\r\n              Inicio\r\n            </Link>\r\n          </div>\r\n        </Header>\r\n        <div className={`${styles.login} login`}>\r\n          <LoginForm />\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n} from 'firebase/auth';\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  setDoc,\r\n  updateDoc,\r\n} from 'firebase/firestore';\r\n\r\nimport { getDownloadURL, getStorage, ref, uploadBytes } from 'firebase/storage';\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_APIKEY,\r\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECTID,\r\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n  appId: process.env.REACT_APP_APPID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Instancia de firebase Authentication\r\nexport const auth = getAuth(app);\r\n\r\n// Instancia de firestore Database\r\nconst db = getFirestore(app);\r\n\r\n// Instancia de cloud storage\r\n\r\nconst storage = getStorage(app);\r\n\r\n// Registro de usuarios con correo y contraseña\r\n\r\nexport async function registerUser({ email, password }) {\r\n  const userCredential = await createUserWithEmailAndPassword(\r\n    auth,\r\n    email,\r\n    password\r\n  );\r\n  return userCredential;\r\n}\r\n\r\n// Inicio de sesión con correo y contraseña\r\n\r\nexport async function loginUser({ email, password }) {\r\n  const userCredential = await signInWithEmailAndPassword(\r\n    auth,\r\n    email,\r\n    password\r\n  );\r\n  return userCredential;\r\n}\r\n\r\n// Cierre de sesión\r\nexport async function logout() {\r\n  await auth.signOut();\r\n}\r\n\r\n// Crear un usuario en la DB\r\n\r\nexport async function createUser(user) {\r\n  const docRef = doc(db, 'users', user.uid);\r\n  await setDoc(docRef, user);\r\n}\r\n\r\n// Obtener la información de un usuario en la DB\r\n\r\nexport async function getUserData(uid) {\r\n  const docRef = doc(db, 'users', uid);\r\n  const docSnap = await getDoc(docRef);\r\n  return docSnap.data();\r\n}\r\n\r\n// Actualizar la información de un usuario de la DB\r\n\r\nexport async function updateUserData(uid, data) {\r\n  const docRef = doc(db, 'users', uid);\r\n  await updateDoc(docRef, data);\r\n}\r\n\r\n/* Funciones de cloud storage */\r\n\r\n// Subir un archivo tipo file a un bucket de storage\r\n\r\nexport async function setProfilePhoto(uid, image) {\r\n  const imageRef = ref(storage, `images/${uid}`);\r\n  const url = await uploadBytes(imageRef, image);\r\n\r\n  return url.metadata.fullPath;\r\n}\r\n\r\n// Obtener el link de descarga del archivo\r\n\r\nexport async function getProfilePhotoUrl(path) {\r\n  const imageRef = ref(storage, path);\r\n  const url = await getDownloadURL(imageRef);\r\n  return url;\r\n}\r\n"],"names":["AuthProvider","children","onUserLoggedIn","onUserNotLoggedIn","useEffect","onAuthStateChanged","auth","user","getUserData","uid","userInfo","tempUserData","name","displayName","creationTime","Date","now","lastName","email","photoURL","createUser","Footer","Header","LoginForm","errorMessage","useRef","provider","GoogleAuthProvider","signInWithPopup","console","error","e","preventDefault","formData","FormData","target","data","Object","fromEntries","password","loginUser","current","innerText","code","split","className","styles","onSubmit","htmlFor","type","id","ref","onClick","Modal","lazy","background","document","createElement","root","createRoot","querySelector","appendChild","render","Suspense","fallback","Spinner","src","require","alt","Login","useState","state","setState","navigate","useNavigate","to","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getFirestore","storage","getStorage","registerUser","createUserWithEmailAndPassword","userCredential","signInWithEmailAndPassword","logout","signOut","docRef","doc","setDoc","getDoc","docSnap","updateUserData","updateDoc","setProfilePhoto","image","imageRef","uploadBytes","url","metadata","fullPath","getProfilePhotoUrl","path","getDownloadURL"],"sourceRoot":""}